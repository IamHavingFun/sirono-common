<project name="SironoPFP" default="deployCheckOnly"
         basedir=".."
         xmlns:sf="antlib:com.salesforce"
         xmlns:ml="org.missinglink.ant.task.http.HttpClientTask">

    <property name="libdir" value="${basedir}/../build/lib"/>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties"
             classpath="${libdir}/ant-contrib-1.0b3.jar"/>
    <taskdef uri="antlib:com.salesforce"
             resource="com/salesforce/antlib.xml"
             classpath="${libdir}/ant-salesforce.jar"/>
    <taskdef name="http" uri="org.missinglink.ant.task.http.HttpClientTask"
             classname="org.missinglink.ant.task.http.HttpClientTask"
             classpath="${libdir}/ml-ant-http-1.1.3.jar"/>

    <property file="${basedir}/../build/build.properties"/>
    <property environment="env"/>

    <!-- Set the connection properties based on the sPFP values -->
    <property name="sf.source.username" value="${sf.spfp.source.username}"/>
    <property name="sf.source.password" value="${sf.spfp.source.password}"/>
    <property name="sf.source.serverurl" value="${sf.spfp.source.serverurl}"/>
    <property name="sf.target.username" value="${sf.spfp.target.username}"/>
    <property name="sf.target.password" value="${sf.spfp.target.password}"/>
    <property name="sf.target.serverurl" value="${sf.spfp.target.serverurl}"/>

    <echo>Building sPFP for target ${sf.target.username} / source ${sf.source.username}.</echo>

    <import file="${basedir}/../build/build-common.xml"/>
    <import file="build_initial_deploy.xml"/>
    <property name="deployRoot" value="${basedir}"/>

    <!-- Setting default value for properties to empty string
         so unset values are treated as empty. Without this, ant expressions such as ${sf.blah.username}
         will be treated literally.
    -->
    <getOrgName text="${sf.target.username}" property="derivedOrgName"/>
    <condition property="orgName" value="${sf.orgName}">
        <isset property="sf.orgName"/>
    </condition>
    <condition property="orgName" value="${derivedOrgName}">
        <not>
            <isset property="sf.orgName"/>
        </not>
    </condition>
    <condition property="sf.commSubDomain" value="${orgName}-sirono-community-developer-edition">
        <not>
            <isset property="sf.commSubDomain"/>
        </not>
    </condition>
    <condition property="sf.siteAdmin" value="${sf.target.username}">
        <not>
            <isset property="sf.siteAdmin"/>
        </not>
    </condition>

    <target name="preDeploy">
        <!-- TODO: Need to deploy the Sirono User profile before anything else -->
        <echo>Deploying sPRS post-install.</echo>
        <antcall target="deployZip">
            <param name="sf.target.username" value="${sf.spfp.target.username}"/>
            <param name="sf.target.password" value="${sf.spfp.target.password}"/>
            <param name="sf.target.serverurl" value="${sf.spfp.target.serverurl}"/>
            <param name="sf.zipFile" value="${basedir}/../call-center/dist/SironoPRS_post_install.zip"/>
            <param name="sf.testLevel" value="NoTestRun"/>
        </antcall>
    </target>

    <target name="deploy" depends="processTemplates, _deploy"/>

    <!-- Deploy without tests -->
    <target name="deployNoTests" depends="processTemplates, _deployNoTests" description="Deploys metadata without running unit tests"/>

    <!-- Undeploy obsolete metadata -->
    <target name="undeployCode" depends="build-common.undeployCode" description="Undeploys obsolete metadata without running unit tests"/>

</project>