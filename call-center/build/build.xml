<project name="SironoPRS" default="deployCheckOnly"
         basedir=".."
         xmlns:sf="antlib:com.salesforce"
         xmlns:ml="org.missinglink.ant.task.http.HttpClientTask">

    <taskdef resource="net/sf/antcontrib/antcontrib.properties"
             classpath="${basedir}/../build/lib/ant-contrib-1.0b3.jar"/>
    <taskdef uri="antlib:com.salesforce"
             resource="com/salesforce/antlib.xml"
             classpath="${basedir}/../build/lib/ant-salesforce.jar"/>
    <taskdef name="http" uri="org.missinglink.ant.task.http.HttpClientTask"
             classname="org.missinglink.ant.task.http.HttpClientTask"
             classpath="${basedir}/../build/lib/ml-ant-http-1.1.3.jar"/>

    <property file="${basedir}/../build/build.properties"/>
    <property file="${basedir}/build/build.properties"/>
    <property environment="env"/>

    <import file="${basedir}/../build/build-common.xml"/>
    <import file="build_initial_deploy.xml"/>


    <!-- Setting default value for username & password properties to empty string
         so unset values are treated as empty. Without this, ant expressions such as ${sf.blah.username}
         will be treated literally.
    -->
    <condition property="sirono.endpoint" value="https://toledo.stage.sirono.com">
        <not>
            <isset property="sirono.endpoint"/>
        </not>
    </condition>
    <condition property="sirono.user" value="sgullapali">
        <not>
            <isset property="sirono.user"/>
        </not>
    </condition>
    <condition property="sirono.pw" value="p@ssw0rd">
        <not>
            <isset property="sirono.pw"/>
        </not>
    </condition>

    <target name="deploy" depends="processTemplates, _deploy, runPostInstallHandler"/>

    <target name="runPostInstallHandler">
        <echo level="info">Running post-install handler</echo>
        <executeAnonymous
            username="${sf.target.username}"
            password="${sf.target.password}"
            serverurl="${sf.target.serverurl}">
            SironoPRSPostInstallHandler.initializeSironoSettings();
        </executeAnonymous>
    </target>



    <!-- Check only; don't save to the server -->
    <target name="deployCheckOnly" depends="processTemplates, populateWorkSrcDir">
        <echo level="info">Validating in: ${sf.target.username} with test level: ${sf.testLevel}</echo>
        <sf:deploy
            username="${sf.target.username}"
            password="${sf.target.password}"
            serverurl="${sf.target.serverurl}"
            deployRoot="${workDir}/src"
            pollWaitMillis="${sf.pollWaitMillis}"
            maxPoll="${sf.maxPoll}"
            testLevel="${sf.testLevel}"
            logType="Debugonly"
            checkOnly="true"/>
    </target>

    <!-- Check only; only run specified tests -->
    <target name="deployCheckSelectTests" depends="processTemplates, populateWorkSrcDir">
        <echo level="info">Running select tests in: ${sf.target.username}</echo>
        <sf:deploy
            username="${sf.target.username}"
            password="${sf.target.password}"
            serverurl="${sf.target.serverurl}"
            deployRoot="${workDir}/src"
            pollWaitMillis="${sf.pollWaitMillis}"
            maxPoll="${sf.maxPoll}"
            logType="Debugonly"
            checkOnly="true"
            testLevel="RunSpecifiedTests">
            <!-- TODO: Make this use a property so that the build file doesn't have to be modified -->
            <runTest>EncounterBalanceTest</runTest>
        </sf:deploy>
    </target>

    <!-- Deploy without tests -->
    <target name="deployNoTests" depends="processTemplates, _deployNoTests, runPostInstallHandler"/>

    <target name="full_deploy" description="Full environment setup in target org"
            depends="stop_all_scheduled_jobs, deploy, schedule_all_jobs"/>

    <!-- TODO: This could be quite a bit more efficient by only deploying what's needed in the second deployNoTests -->
    <target name="initial_deploy" description="Deploy into a DE org for the first time"
            depends="preDeploy, deployPrep, deployNoTests, revertPrep, deployNoTests, remove_sample_data,
            revertPrep"/>

    <target name="schedule_all_jobs" depends="stop_all_scheduled_jobs">
        <echo level="info">Schedule all jobs in: ${sf.target.username}</echo>
        <!-- schedule all jobs -->
        <executeAnonymous
            username="${sf.target.username}"
            password="${sf.target.password}"
            serverurl="${sf.target.serverurl}">
            <![CDATA[
                System.schedule('PopulateNextPaymentDateBatch', '0 0 1 * * ?', new PopulateNextPaymentDateBatch());
                System.schedule('CallEarlyOutAutoCase', '0 0 1 * * ?', new CallEarlyOutAutoCase());
                System.schedule('CallPrecollectionsAutoCase', '0 0 2 * * ?', new CallPrecollectionsAutoCase());
                System.schedule('EarlyOutSchedulerBatch', '0 0 3 * * ?', new EarlyOutSchedulerBatch());
                System.schedule('DelinquentPaymentPlansSchedulerBatch', '0 0 4 * * ?', new DelinquentPaymentPlansSchedulerBatch());
                System.schedule('PreCollectionSchedulerBatch', '0 0 1 * * ?', new PreCollectionSchedulerBatch());
                System.schedule('PreServiceSchedulerBatch', '0 0 1 * * ?', new PreServiceSchedulerBatch());
            ]]>
        </executeAnonymous>
    </target>

    <target name="remove_sample_data">
        <echo level="info">Remove all sample data from dev org: ${sf.target.username}</echo>
        <executeAnonymous
            username="${sf.target.username}"
            password="${sf.target.password}"
            serverurl="${sf.target.serverurl}">
            <![CDATA[
                Opportunity[] opps = [SELECT Id FROM Opportunity];
                DELETE opps;
                Case[] cases = [SELECT Id FROM Case];
                DELETE cases;
                Lead[] leads = [SELECT Id FROM Lead];
                DELETE leads;
                Contact[] contacts = [SELECT Id FROM Contact];
                DELETE contacts;
                Campaign[] cmpns = [SELECT Id FROM Campaign];
                DELETE cmpns;
                Solution[] sols = [SELECT Id FROM Solution];
                DELETE sols;
                Account[] accts = [SELECT Id FROM Account];
                DELETE accts;
            ]]>
        </executeAnonymous>
    </target>
</project>